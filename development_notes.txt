1. When clicking one marker, all markers reacts(blinks for a moment)
---The cause was using crypto.randomUUID for each marker. The blink is gone by using marker.id

>> refer from the nanoid github
There’s no correct way to use Nano ID for React key prop since it should be consistent among renders.

function Todos({todos}) {
  return (
    <ul>
      {todos.map(todo => (
        <li key={nanoid()}> /* DON’T DO IT */
          {todo.text}
        </li>
      ))}
    </ul>
  )
}


You should rather try to reach for stable ID inside your list item.

const todoItems = todos.map((todo) =>
  <li key={todo.id}>
    {todo.text}
  </li>
)

2. <input id="apple"/> 
    <label htmlFor="apple">Apple</label> 
  if having "htmlFor" in a label tag, clickable even on the text "Apple"

3. Error on console: "Google Maps JavaScript API has been loaded directly without loading=async. This can result in suboptimal performance."
>>> I dont know well but, after I set css 
#root, #map {
  height: 100vh;
  width: 100%;
  margin: 0 auto;
  // justify-content: baseline;
  }

  , then the map shows up


  -----------
  the data on FormProfile page will be stored on firebase.
  the data from firebase will be shown on the main page.

  4. Github can be searched by the code!

  5. FormProfile.jsx
  It cannot combine React hook form and google maps auto complete function.
  ex) X 
  <input
    type="text"
    id="location"
    ref={inputRef}
    value={inputValue}
    onChange={handleInputChange}
    onChange={(e) => handleInputChange(e)}
    {...register("location", { required: "Type your location" })} // this doesnt work
  />

  Solution>>
  Use the input tag without React hook form. and the data that wants to store is added by manual in the code
  addDoc(collection(db, "users"), {
      ...data,
      id: nanoid(),
      datetime: new Date(),
      location: location.place
    });


6. Let's use useForm and MUI

          <FormInputText
            name="textValue"
            control={control}
            label="Text Input"
          />



"You have successfully logged in."

const [user, setUser] = useState("")
	const data = { loginUser: user, setUser: setUser }
   const [url, setUrl] = useState<string>('');
  const [pageId, setPageId] = useState<number>(1);
  const Props = {
    url,
    pageId,
  };

style={{ display: FormProfile ? "none" : "block" }}

{someCondition && (
  <div>
    {anotherCondition && <div></div>}
  </div>
)}